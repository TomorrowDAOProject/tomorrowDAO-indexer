// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protobuf/contract/election_contract.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using System.Collections.Generic;
using aelf = global::AElf.CSharp.Core;

namespace TomorrowDAO.Contracts.Election {

  #region Events
  public partial class ElectionVotingEventRegistered : aelf::IEvent<ElectionVotingEventRegistered>
  {
    public global::System.Collections.Generic.IEnumerable<ElectionVotingEventRegistered> GetIndexed()
    {
      return new List<ElectionVotingEventRegistered>
      {
      };
    }

    public ElectionVotingEventRegistered GetNonIndexed()
    {
      return new ElectionVotingEventRegistered
      {
        DaoId = DaoId,
        TimeEachTerm = TimeEachTerm,
        CandidateCount = CandidateCount,
        HighCouncilCount = HighCouncilCount,
        GovernanceToken = GovernanceToken,
      };
    }
  }

  public partial class NewTerm : aelf::IEvent<NewTerm>
  {
    public global::System.Collections.Generic.IEnumerable<NewTerm> GetIndexed()
    {
      return new List<NewTerm>
      {
      };
    }

    public NewTerm GetNonIndexed()
    {
      return new NewTerm
      {
        DaoId = DaoId,
        PreTermNumber = PreTermNumber,
        NewNumber = NewNumber,
      };
    }
  }

  public partial class CandidateAdded : aelf::IEvent<CandidateAdded>
  {
    public global::System.Collections.Generic.IEnumerable<CandidateAdded> GetIndexed()
    {
      return new List<CandidateAdded>
      {
      };
    }

    public CandidateAdded GetNonIndexed()
    {
      return new CandidateAdded
      {
        DaoId = DaoId,
        Candidate = Candidate,
        Amount = Amount,
      };
    }
  }

  public partial class CandidateRemoved : aelf::IEvent<CandidateRemoved>
  {
    public global::System.Collections.Generic.IEnumerable<CandidateRemoved> GetIndexed()
    {
      return new List<CandidateRemoved>
      {
      };
    }

    public CandidateRemoved GetNonIndexed()
    {
      return new CandidateRemoved
      {
        DaoId = DaoId,
        Candidate = Candidate,
      };
    }
  }

  public partial class Voted : aelf::IEvent<Voted>
  {
    public global::System.Collections.Generic.IEnumerable<Voted> GetIndexed()
    {
      return new List<Voted>
      {
      };
    }

    public Voted GetNonIndexed()
    {
      return new Voted
      {
        DaoId = DaoId,
        CandidateAddress = CandidateAddress,
        Amount = Amount,
        EndTimestamp = EndTimestamp,
        VoteId = VoteId,
      };
    }
  }

  public partial class VoteChanged : aelf::IEvent<VoteChanged>
  {
    public global::System.Collections.Generic.IEnumerable<VoteChanged> GetIndexed()
    {
      return new List<VoteChanged>
      {
      };
    }

    public VoteChanged GetNonIndexed()
    {
      return new VoteChanged
      {
        VoteId = VoteId,
        CandidateAddress = CandidateAddress,
      };
    }
  }

  public partial class CandidateInfoUpdated : aelf::IEvent<CandidateInfoUpdated>
  {
    public global::System.Collections.Generic.IEnumerable<CandidateInfoUpdated> GetIndexed()
    {
      return new List<CandidateInfoUpdated>
      {
      };
    }

    public CandidateInfoUpdated GetNonIndexed()
    {
      return new CandidateInfoUpdated
      {
        DaoId = DaoId,
        CandidateAddress = CandidateAddress,
        IsEvilNode = IsEvilNode,
      };
    }
  }

  public partial class CandidateAddressReplaced : aelf::IEvent<CandidateAddressReplaced>
  {
    public global::System.Collections.Generic.IEnumerable<CandidateAddressReplaced> GetIndexed()
    {
      return new List<CandidateAddressReplaced>
      {
      };
    }

    public CandidateAddressReplaced GetNonIndexed()
    {
      return new CandidateAddressReplaced
      {
        DaoId = DaoId,
        OldAddress = OldAddress,
        NewAddress = NewAddress,
      };
    }
  }

  public partial class EvilNodeRemoved : aelf::IEvent<EvilNodeRemoved>
  {
    public global::System.Collections.Generic.IEnumerable<EvilNodeRemoved> GetIndexed()
    {
      return new List<EvilNodeRemoved>
      {
      };
    }

    public EvilNodeRemoved GetNonIndexed()
    {
      return new EvilNodeRemoved
      {
        DaoId = DaoId,
        EvilNodeAddress = EvilNodeAddress,
      };
    }
  }

  public partial class ElectionEnabled : aelf::IEvent<ElectionEnabled>
  {
    public global::System.Collections.Generic.IEnumerable<ElectionEnabled> GetIndexed()
    {
      return new List<ElectionEnabled>
      {
      };
    }

    public ElectionEnabled GetNonIndexed()
    {
      return new ElectionEnabled
      {
        DaoId = DaoId,
      };
    }
  }

  #endregion
  public static partial class ElectionContractContainer
  {
    static readonly string __ServiceName = "ElectionContract";

    #region Marshallers
    static readonly aelf::Marshaller<global::Google.Protobuf.WellKnownTypes.StringValue> __Marshaller_google_protobuf_StringValue = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.StringValue.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.Empty.Parser.ParseFrom);
    #endregion

    #region Methods
    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.StringValue, global::Google.Protobuf.WellKnownTypes.Empty> __Method_Update = new aelf::Method<global::Google.Protobuf.WellKnownTypes.StringValue, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "Update",
        __Marshaller_google_protobuf_StringValue,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Google.Protobuf.WellKnownTypes.StringValue> __Method_Read = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Google.Protobuf.WellKnownTypes.StringValue>(
        aelf::MethodType.View,
        __ServiceName,
        "Read",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_google_protobuf_StringValue);

    #endregion

    #region Descriptors
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::TomorrowDAO.Contracts.Election.ElectionContractReflection.Descriptor.Services[0]; }
    }

    public static global::System.Collections.Generic.IReadOnlyList<global::Google.Protobuf.Reflection.ServiceDescriptor> Descriptors
    {
      get
      {
        return new global::System.Collections.Generic.List<global::Google.Protobuf.Reflection.ServiceDescriptor>()
        {
          global::TomorrowDAO.Contracts.Election.ElectionContractReflection.Descriptor.Services[0],
        };
      }
    }
    #endregion

    /// <summary>Base class for the contract of ElectionContract</summary>
    // public abstract partial class ElectionContractBase : AElf.Sdk.CSharp.CSharpSmartContract<TomorrowDAO.Contracts.Election.ElectionContractState>
    // {
    //   public virtual global::Google.Protobuf.WellKnownTypes.Empty Update(global::Google.Protobuf.WellKnownTypes.StringValue input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.StringValue Read(global::Google.Protobuf.WellKnownTypes.Empty input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    // }
    //
    // public static aelf::ServerServiceDefinition BindService(ElectionContractBase serviceImpl)
    // {
    //   return aelf::ServerServiceDefinition.CreateBuilder()
    //       .AddDescriptors(Descriptors)
    //       .AddMethod(__Method_Update, serviceImpl.Update)
    //       .AddMethod(__Method_Read, serviceImpl.Read).Build();
    // }

  }
}
#endregion

