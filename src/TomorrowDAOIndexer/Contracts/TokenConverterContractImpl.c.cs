// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: token_converter_contract_impl.proto
// </auto-generated>
// Original file comments:
// *
// TokenConvert contract.
//
// Using this contract can build a connection between the base token and other tokens 
// created on the chain. After building the connection, users can trade tokens with the Bancor model. 
// You can find the detail information about Bancor in AElf Economic System White Paper.
// 
// Implement AElf Standards ACS1.
#pragma warning disable 0414, 1591
#region Designer generated code

using System.Collections.Generic;
using aelf = global::AElf.CSharp.Core;

namespace AElf.Contracts.TokenConverter {

  #region Events
  #endregion
  public static partial class TokenConverterContractImplContainer
  {
    static readonly string __ServiceName = "TokenConverterImpl.TokenConverterContractImpl";

    #region Marshallers
    static readonly aelf::Marshaller<global::AElf.Standards.ACS1.MethodFees> __Marshaller_acs1_MethodFees = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Standards.ACS1.MethodFees.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.Empty.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AuthorityInfo> __Marshaller_AuthorityInfo = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AuthorityInfo.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Google.Protobuf.WellKnownTypes.StringValue> __Marshaller_google_protobuf_StringValue = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.StringValue.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.TokenConverter.InitializeInput> __Marshaller_TokenConverter_InitializeInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.TokenConverter.InitializeInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.TokenConverter.Connector> __Marshaller_TokenConverter_Connector = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.TokenConverter.Connector.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.TokenConverter.BuyInput> __Marshaller_TokenConverter_BuyInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.TokenConverter.BuyInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.TokenConverter.SellInput> __Marshaller_TokenConverter_SellInput = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.TokenConverter.SellInput.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.TokenConverter.PairConnectorParam> __Marshaller_TokenConverter_PairConnectorParam = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.TokenConverter.PairConnectorParam.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.TokenConverter.ToBeConnectedTokenInfo> __Marshaller_TokenConverter_ToBeConnectedTokenInfo = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.TokenConverter.ToBeConnectedTokenInfo.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.TokenConverter.TokenSymbol> __Marshaller_TokenConverter_TokenSymbol = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.TokenConverter.TokenSymbol.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.TokenConverter.PairConnector> __Marshaller_TokenConverter_PairConnector = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.TokenConverter.PairConnector.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::AElf.Contracts.TokenConverter.DepositInfo> __Marshaller_TokenConverter_DepositInfo = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::AElf.Contracts.TokenConverter.DepositInfo.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Google.Protobuf.WellKnownTypes.Int64Value> __Marshaller_google_protobuf_Int64Value = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.Int64Value.Parser.ParseFrom);
    static readonly aelf::Marshaller<global::Google.Protobuf.WellKnownTypes.BoolValue> __Marshaller_google_protobuf_BoolValue = aelf::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.BoolValue.Parser.ParseFrom);
    #endregion

    #region Methods
    static readonly aelf::Method<global::AElf.Standards.ACS1.MethodFees, global::Google.Protobuf.WellKnownTypes.Empty> __Method_SetMethodFee = new aelf::Method<global::AElf.Standards.ACS1.MethodFees, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "SetMethodFee",
        __Marshaller_acs1_MethodFees,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AuthorityInfo, global::Google.Protobuf.WellKnownTypes.Empty> __Method_ChangeMethodFeeController = new aelf::Method<global::AuthorityInfo, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "ChangeMethodFeeController",
        __Marshaller_AuthorityInfo,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.StringValue, global::AElf.Standards.ACS1.MethodFees> __Method_GetMethodFee = new aelf::Method<global::Google.Protobuf.WellKnownTypes.StringValue, global::AElf.Standards.ACS1.MethodFees>(
        aelf::MethodType.View,
        __ServiceName,
        "GetMethodFee",
        __Marshaller_google_protobuf_StringValue,
        __Marshaller_acs1_MethodFees);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AuthorityInfo> __Method_GetMethodFeeController = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AuthorityInfo>(
        aelf::MethodType.View,
        __ServiceName,
        "GetMethodFeeController",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_AuthorityInfo);

    static readonly aelf::Method<global::AElf.Contracts.TokenConverter.InitializeInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_Initialize = new aelf::Method<global::AElf.Contracts.TokenConverter.InitializeInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "Initialize",
        __Marshaller_TokenConverter_InitializeInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Contracts.TokenConverter.Connector, global::Google.Protobuf.WellKnownTypes.Empty> __Method_SetConnector = new aelf::Method<global::AElf.Contracts.TokenConverter.Connector, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "SetConnector",
        __Marshaller_TokenConverter_Connector,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Contracts.TokenConverter.BuyInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_Buy = new aelf::Method<global::AElf.Contracts.TokenConverter.BuyInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "Buy",
        __Marshaller_TokenConverter_BuyInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Contracts.TokenConverter.SellInput, global::Google.Protobuf.WellKnownTypes.Empty> __Method_Sell = new aelf::Method<global::AElf.Contracts.TokenConverter.SellInput, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "Sell",
        __Marshaller_TokenConverter_SellInput,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.StringValue, global::Google.Protobuf.WellKnownTypes.Empty> __Method_SetFeeRate = new aelf::Method<global::Google.Protobuf.WellKnownTypes.StringValue, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "SetFeeRate",
        __Marshaller_google_protobuf_StringValue,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Contracts.TokenConverter.Connector, global::Google.Protobuf.WellKnownTypes.Empty> __Method_UpdateConnector = new aelf::Method<global::AElf.Contracts.TokenConverter.Connector, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "UpdateConnector",
        __Marshaller_TokenConverter_Connector,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Contracts.TokenConverter.PairConnectorParam, global::Google.Protobuf.WellKnownTypes.Empty> __Method_AddPairConnector = new aelf::Method<global::AElf.Contracts.TokenConverter.PairConnectorParam, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "AddPairConnector",
        __Marshaller_TokenConverter_PairConnectorParam,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Contracts.TokenConverter.ToBeConnectedTokenInfo, global::Google.Protobuf.WellKnownTypes.Empty> __Method_EnableConnector = new aelf::Method<global::AElf.Contracts.TokenConverter.ToBeConnectedTokenInfo, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "EnableConnector",
        __Marshaller_TokenConverter_ToBeConnectedTokenInfo,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AuthorityInfo, global::Google.Protobuf.WellKnownTypes.Empty> __Method_ChangeConnectorController = new aelf::Method<global::AuthorityInfo, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "ChangeConnectorController",
        __Marshaller_AuthorityInfo,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Google.Protobuf.WellKnownTypes.Empty> __Method_MigrateConnectorTokens = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Google.Protobuf.WellKnownTypes.Empty>(
        aelf::MethodType.Action,
        __ServiceName,
        "MigrateConnectorTokens",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_google_protobuf_Empty);

    static readonly aelf::Method<global::AElf.Contracts.TokenConverter.TokenSymbol, global::AElf.Contracts.TokenConverter.PairConnector> __Method_GetPairConnector = new aelf::Method<global::AElf.Contracts.TokenConverter.TokenSymbol, global::AElf.Contracts.TokenConverter.PairConnector>(
        aelf::MethodType.View,
        __ServiceName,
        "GetPairConnector",
        __Marshaller_TokenConverter_TokenSymbol,
        __Marshaller_TokenConverter_PairConnector);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Google.Protobuf.WellKnownTypes.StringValue> __Method_GetFeeRate = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Google.Protobuf.WellKnownTypes.StringValue>(
        aelf::MethodType.View,
        __ServiceName,
        "GetFeeRate",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_google_protobuf_StringValue);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Contracts.TokenConverter.TokenSymbol> __Method_GetBaseTokenSymbol = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AElf.Contracts.TokenConverter.TokenSymbol>(
        aelf::MethodType.View,
        __ServiceName,
        "GetBaseTokenSymbol",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_TokenConverter_TokenSymbol);

    static readonly aelf::Method<global::AElf.Contracts.TokenConverter.ToBeConnectedTokenInfo, global::AElf.Contracts.TokenConverter.DepositInfo> __Method_GetNeededDeposit = new aelf::Method<global::AElf.Contracts.TokenConverter.ToBeConnectedTokenInfo, global::AElf.Contracts.TokenConverter.DepositInfo>(
        aelf::MethodType.View,
        __ServiceName,
        "GetNeededDeposit",
        __Marshaller_TokenConverter_ToBeConnectedTokenInfo,
        __Marshaller_TokenConverter_DepositInfo);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.StringValue, global::Google.Protobuf.WellKnownTypes.Int64Value> __Method_GetDepositConnectorBalance = new aelf::Method<global::Google.Protobuf.WellKnownTypes.StringValue, global::Google.Protobuf.WellKnownTypes.Int64Value>(
        aelf::MethodType.View,
        __ServiceName,
        "GetDepositConnectorBalance",
        __Marshaller_google_protobuf_StringValue,
        __Marshaller_google_protobuf_Int64Value);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AuthorityInfo> __Method_GetControllerForManageConnector = new aelf::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::AuthorityInfo>(
        aelf::MethodType.View,
        __ServiceName,
        "GetControllerForManageConnector",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_AuthorityInfo);

    static readonly aelf::Method<global::Google.Protobuf.WellKnownTypes.StringValue, global::Google.Protobuf.WellKnownTypes.BoolValue> __Method_IsSymbolAbleToSell = new aelf::Method<global::Google.Protobuf.WellKnownTypes.StringValue, global::Google.Protobuf.WellKnownTypes.BoolValue>(
        aelf::MethodType.View,
        __ServiceName,
        "IsSymbolAbleToSell",
        __Marshaller_google_protobuf_StringValue,
        __Marshaller_google_protobuf_BoolValue);

    #endregion

    #region Descriptors
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::AElf.Contracts.TokenConverter.TokenConverterContractImplReflection.Descriptor.Services[0]; }
    }

    public static global::System.Collections.Generic.IReadOnlyList<global::Google.Protobuf.Reflection.ServiceDescriptor> Descriptors
    {
      get
      {
        return new global::System.Collections.Generic.List<global::Google.Protobuf.Reflection.ServiceDescriptor>()
        {
          global::AElf.Standards.ACS1.Acs1Reflection.Descriptor.Services[0],
          global::AElf.Contracts.TokenConverter.TokenConverterContractReflection.Descriptor.Services[0],
          global::AElf.Contracts.TokenConverter.TokenConverterContractImplReflection.Descriptor.Services[0],
        };
      }
    }
    #endregion

    /// <summary>Base class for the contract of TokenConverterContractImpl</summary>
    // public abstract partial class TokenConverterContractImplBase : AElf.Sdk.CSharp.CSharpSmartContract<AElf.Contracts.TokenConverter.TokenConverterContractState>
    // {
    //   public virtual global::Google.Protobuf.WellKnownTypes.Empty SetMethodFee(global::AElf.Standards.ACS1.MethodFees input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.Empty ChangeMethodFeeController(global::AuthorityInfo input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::AElf.Standards.ACS1.MethodFees GetMethodFee(global::Google.Protobuf.WellKnownTypes.StringValue input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::AuthorityInfo GetMethodFeeController(global::Google.Protobuf.WellKnownTypes.Empty input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.Empty Initialize(global::AElf.Contracts.TokenConverter.InitializeInput input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.Empty SetConnector(global::AElf.Contracts.TokenConverter.Connector input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.Empty Buy(global::AElf.Contracts.TokenConverter.BuyInput input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.Empty Sell(global::AElf.Contracts.TokenConverter.SellInput input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.Empty SetFeeRate(global::Google.Protobuf.WellKnownTypes.StringValue input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.Empty UpdateConnector(global::AElf.Contracts.TokenConverter.Connector input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.Empty AddPairConnector(global::AElf.Contracts.TokenConverter.PairConnectorParam input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.Empty EnableConnector(global::AElf.Contracts.TokenConverter.ToBeConnectedTokenInfo input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.Empty ChangeConnectorController(global::AuthorityInfo input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.Empty MigrateConnectorTokens(global::Google.Protobuf.WellKnownTypes.Empty input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::AElf.Contracts.TokenConverter.PairConnector GetPairConnector(global::AElf.Contracts.TokenConverter.TokenSymbol input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.StringValue GetFeeRate(global::Google.Protobuf.WellKnownTypes.Empty input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::AElf.Contracts.TokenConverter.TokenSymbol GetBaseTokenSymbol(global::Google.Protobuf.WellKnownTypes.Empty input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::AElf.Contracts.TokenConverter.DepositInfo GetNeededDeposit(global::AElf.Contracts.TokenConverter.ToBeConnectedTokenInfo input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.Int64Value GetDepositConnectorBalance(global::Google.Protobuf.WellKnownTypes.StringValue input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::AuthorityInfo GetControllerForManageConnector(global::Google.Protobuf.WellKnownTypes.Empty input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    //   public virtual global::Google.Protobuf.WellKnownTypes.BoolValue IsSymbolAbleToSell(global::Google.Protobuf.WellKnownTypes.StringValue input)
    //   {
    //     throw new global::System.NotImplementedException();
    //   }
    //
    // }
    //
    // public static aelf::ServerServiceDefinition BindService(TokenConverterContractImplBase serviceImpl)
    // {
    //   return aelf::ServerServiceDefinition.CreateBuilder()
    //       .AddDescriptors(Descriptors)
    //       .AddMethod(__Method_SetMethodFee, serviceImpl.SetMethodFee)
    //       .AddMethod(__Method_ChangeMethodFeeController, serviceImpl.ChangeMethodFeeController)
    //       .AddMethod(__Method_GetMethodFee, serviceImpl.GetMethodFee)
    //       .AddMethod(__Method_GetMethodFeeController, serviceImpl.GetMethodFeeController)
    //       .AddMethod(__Method_Initialize, serviceImpl.Initialize)
    //       .AddMethod(__Method_SetConnector, serviceImpl.SetConnector)
    //       .AddMethod(__Method_Buy, serviceImpl.Buy)
    //       .AddMethod(__Method_Sell, serviceImpl.Sell)
    //       .AddMethod(__Method_SetFeeRate, serviceImpl.SetFeeRate)
    //       .AddMethod(__Method_UpdateConnector, serviceImpl.UpdateConnector)
    //       .AddMethod(__Method_AddPairConnector, serviceImpl.AddPairConnector)
    //       .AddMethod(__Method_EnableConnector, serviceImpl.EnableConnector)
    //       .AddMethod(__Method_ChangeConnectorController, serviceImpl.ChangeConnectorController)
    //       .AddMethod(__Method_MigrateConnectorTokens, serviceImpl.MigrateConnectorTokens)
    //       .AddMethod(__Method_GetPairConnector, serviceImpl.GetPairConnector)
    //       .AddMethod(__Method_GetFeeRate, serviceImpl.GetFeeRate)
    //       .AddMethod(__Method_GetBaseTokenSymbol, serviceImpl.GetBaseTokenSymbol)
    //       .AddMethod(__Method_GetNeededDeposit, serviceImpl.GetNeededDeposit)
    //       .AddMethod(__Method_GetDepositConnectorBalance, serviceImpl.GetDepositConnectorBalance)
    //       .AddMethod(__Method_GetControllerForManageConnector, serviceImpl.GetControllerForManageConnector)
    //       .AddMethod(__Method_IsSymbolAbleToSell, serviceImpl.IsSymbolAbleToSell).Build();
    // }

  }
}
#endregion

