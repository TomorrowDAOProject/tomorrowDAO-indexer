// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protobuf/contract/treasury_contract.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using System.Collections.Generic;
using aelf = global::AElf.CSharp.Core;

namespace TomorrowDAO.Contracts.Treasury {

  #region Events
  public partial class TreasuryCreated : aelf::IEvent<TreasuryCreated>
  {
    public global::System.Collections.Generic.IEnumerable<TreasuryCreated> GetIndexed()
    {
      return new List<TreasuryCreated>
      {
      };
    }

    public TreasuryCreated GetNonIndexed()
    {
      return new TreasuryCreated
      {
        DaoId = DaoId,
        TreasuryAccountAddress = TreasuryAccountAddress,
        SymbolList = SymbolList,
      };
    }
  }

  public partial class SupportedStakingTokensAdded : aelf::IEvent<SupportedStakingTokensAdded>
  {
    public global::System.Collections.Generic.IEnumerable<SupportedStakingTokensAdded> GetIndexed()
    {
      return new List<SupportedStakingTokensAdded>
      {
      };
    }

    public SupportedStakingTokensAdded GetNonIndexed()
    {
      return new SupportedStakingTokensAdded
      {
        DaoId = DaoId,
        AddedTokens = AddedTokens,
      };
    }
  }

  public partial class SupportedStakingTokensRemoved : aelf::IEvent<SupportedStakingTokensRemoved>
  {
    public global::System.Collections.Generic.IEnumerable<SupportedStakingTokensRemoved> GetIndexed()
    {
      return new List<SupportedStakingTokensRemoved>
      {
      };
    }

    public SupportedStakingTokensRemoved GetNonIndexed()
    {
      return new SupportedStakingTokensRemoved
      {
        DaoId = DaoId,
        RemovedTokens = RemovedTokens,
      };
    }
  }

  public partial class DonationReceived : aelf::IEvent<DonationReceived>
  {
    public global::System.Collections.Generic.IEnumerable<DonationReceived> GetIndexed()
    {
      return new List<DonationReceived>
      {
      };
    }

    public DonationReceived GetNonIndexed()
    {
      return new DonationReceived
      {
        DaoId = DaoId,
        Amount = Amount,
        Symbol = Symbol,
        Donor = Donor,
        DonationTime = DonationTime,
      };
    }
  }

  public partial class TokenStaked : aelf::IEvent<TokenStaked>
  {
    public global::System.Collections.Generic.IEnumerable<TokenStaked> GetIndexed()
    {
      return new List<TokenStaked>
      {
      };
    }

    public TokenStaked GetNonIndexed()
    {
      return new TokenStaked
      {
        DaoId = DaoId,
        Amount = Amount,
        Symbol = Symbol,
        Account = Account,
        StakedTime = StakedTime,
      };
    }
  }

  public partial class TreasuryTokenLocked : aelf::IEvent<TreasuryTokenLocked>
  {
    public global::System.Collections.Generic.IEnumerable<TreasuryTokenLocked> GetIndexed()
    {
      return new List<TreasuryTokenLocked>
      {
      };
    }

    public TreasuryTokenLocked GetNonIndexed()
    {
      return new TreasuryTokenLocked
      {
        LockInfo = LockInfo,
        Proposer = Proposer,
      };
    }
  }

  public partial class TreasuryTransferReleased : aelf::IEvent<TreasuryTransferReleased>
  {
    public global::System.Collections.Generic.IEnumerable<TreasuryTransferReleased> GetIndexed()
    {
      return new List<TreasuryTransferReleased>
      {
      };
    }

    public TreasuryTransferReleased GetNonIndexed()
    {
      return new TreasuryTransferReleased
      {
        DaoId = DaoId,
        Amount = Amount,
        Symbol = Symbol,
        Recipient = Recipient,
        Memo = Memo,
        ProposalId = ProposalId,
        Executor = Executor,
      };
    }
  }

  public partial class TreasuryTokenUnlocked : aelf::IEvent<TreasuryTokenUnlocked>
  {
    public global::System.Collections.Generic.IEnumerable<TreasuryTokenUnlocked> GetIndexed()
    {
      return new List<TreasuryTokenUnlocked>
      {
      };
    }

    public TreasuryTokenUnlocked GetNonIndexed()
    {
      return new TreasuryTokenUnlocked
      {
        LockInfo = LockInfo,
      };
    }
  }

  public partial class Paused : aelf::IEvent<Paused>
  {
    public global::System.Collections.Generic.IEnumerable<Paused> GetIndexed()
    {
      return new List<Paused>
      {
      };
    }

    public Paused GetNonIndexed()
    {
      return new Paused
      {
        Account = Account,
        DaoId = DaoId,
      };
    }
  }

  public partial class Unpaused : aelf::IEvent<Unpaused>
  {
    public global::System.Collections.Generic.IEnumerable<Unpaused> GetIndexed()
    {
      return new List<Unpaused>
      {
      };
    }

    public Unpaused GetNonIndexed()
    {
      return new Unpaused
      {
        Account = Account,
        DaoId = DaoId,
      };
    }
  }

  public partial class EmergencyTransferred : aelf::IEvent<EmergencyTransferred>
  {
    public global::System.Collections.Generic.IEnumerable<EmergencyTransferred> GetIndexed()
    {
      return new List<EmergencyTransferred>
      {
      };
    }

    public EmergencyTransferred GetNonIndexed()
    {
      return new EmergencyTransferred
      {
        DaoId = DaoId,
        Symbol = Symbol,
        Amount = Amount,
        Recipient = Recipient,
        Account = Account,
      };
    }
  }

  #endregion
  public static partial class TreasuryContractContainer
  {
    static readonly string __ServiceName = "TreasuryContract";

    #region Marshallers
    #endregion

    #region Methods
    #endregion

    #region Descriptors
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::TomorrowDAO.Contracts.Treasury.TreasuryContractReflection.Descriptor.Services[0]; }
    }

    public static global::System.Collections.Generic.IReadOnlyList<global::Google.Protobuf.Reflection.ServiceDescriptor> Descriptors
    {
      get
      {
        return new global::System.Collections.Generic.List<global::Google.Protobuf.Reflection.ServiceDescriptor>()
        {
          global::AElf.Standards.ACS12.Acs12Reflection.Descriptor.Services[0],
          global::TomorrowDAO.Contracts.Treasury.TreasuryContractReflection.Descriptor.Services[0],
        };
      }
    }
    #endregion

    /// <summary>Base class for the contract of TreasuryContract</summary>
    // public abstract partial class TreasuryContractBase : AElf.Sdk.CSharp.CSharpSmartContract<TomorrowDAO.Contracts.Treasury.TreasuryContractState>
    // {
    // }
    //
    // public static aelf::ServerServiceDefinition BindService(TreasuryContractBase serviceImpl)
    // {
    //   return aelf::ServerServiceDefinition.CreateBuilder()
    //       .AddDescriptors(Descriptors).Build();
    // }

  }
}
#endregion

